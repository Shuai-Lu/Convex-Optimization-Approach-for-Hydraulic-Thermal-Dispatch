function model_cons_McCormick(varargin)
if find(strcmp(varargin, 'DisplayTime'))
    DisplayTime = varargin{find(strcmp(varargin, 'DisplayTime'))+1};
else
    DisplayTime = 1;
end
if DisplayTime
    fprintf('%-40s\t\t','- Calculate residual');
    t0 = clock;
end
%%
flag_McCormick = 1;
global data model;
[loc_fnode, loc_tnode, loc_length, loc_diameter, loc_rough, ...
    loc_conductivity, loc_flowrate_min, loc_flowrate_max, ...
    loc_tau_s_min, loc_tau_s_max, loc_tau_r_min, loc_tau_r_max, loc_flag_pump, loc_eta_pump, loc_flag_ecv] = ...
    deal(1,2,3,4,5,6,7,8,9,10,11,12,16,17,18);
[loc_nodeno, loc_nodetype] = deal(1,2);
[loc_initial_Tau_s, loc_initial_Tau_r, loc_initial_Tau_amb] = ...
    deal(1,2,3);
%%
data_pipe = data.heatingnetwork.pipe;
data_node = data.heatingnetwork.node;
data_initial = data.initialParam.heatingnetwork;
num_initialtime = data.initialParam.heatingnetwork.num_initialtime;
num_heatperiod = data.period*data.interval.electricity/data.interval.heat;  % h
num_start = num_initialtime+1;
num_end = num_initialtime+num_heatperiod;
num_pipe = size(data_pipe,1);
num_node = size(data_node,1);
num_source = sum(data_node(:,loc_nodetype) == 0);
num_load = sum(data_node(:,loc_nodetype) == 2);
num_pump = sum(data_pipe(:,loc_flag_pump) == 1);
%%
c_w = data.BasicParam.Massflow.HeatCapacity;     % kJ/(kg*¡æ)
gravity = data.BasicParam.gravity;                     % m/s^2
big_M = data.BasicParam.big_M;
heat_coefficient = 1/3600*c_w;   % MWh/(t*¡æ)
eta_pump = data_pipe(data_pipe(:,loc_flag_pump)==1, loc_eta_pump);
%%
Massflow_max = model.record.bounds(end).heatingnetwork.Massflow_max;
Massflow_min = model.record.bounds(end).heatingnetwork.Massflow_min;
Tau_pipe_s_in_max = model.record.bounds(end).heatingnetwork.Tau_pipe_s_in_max;
Tau_pipe_s_in_min = model.record.bounds(end).heatingnetwork.Tau_pipe_s_in_min;
Tau_pipe_s_out_max = model.record.bounds(end).heatingnetwork.Tau_pipe_s_out_max;
Tau_pipe_s_out_min = model.record.bounds(end).heatingnetwork.Tau_pipe_s_out_min;
Tau_pipe_r_in_max = model.record.bounds(end).heatingnetwork.Tau_pipe_r_in_max;
Tau_pipe_r_in_min = model.record.bounds(end).heatingnetwork.Tau_pipe_r_in_min;
Tau_pipe_r_out_max = model.record.bounds(end).heatingnetwork.Tau_pipe_r_out_max;
Tau_pipe_r_out_min = model.record.bounds(end).heatingnetwork.Tau_pipe_r_out_min;
aux_alpha_max = model.record.bounds(end).heatingnetwork.aux_alpha_max;
aux_alpha_min = model.record.bounds(end).heatingnetwork.aux_alpha_min;
aux_beta_max = model.record.bounds(end).heatingnetwork.aux_beta_max;
aux_beta_min = model.record.bounds(end).heatingnetwork.aux_beta_min;
h_pipe_s_in_max = heat_coefficient*Massflow_max.*Tau_pipe_s_in_max;  % kW
h_pipe_s_in_min = heat_coefficient*Massflow_min.*Tau_pipe_s_in_min;
h_pipe_r_in_max = heat_coefficient*Massflow_max.*Tau_pipe_r_in_max;
h_pipe_r_in_min = heat_coefficient*Massflow_min.*Tau_pipe_r_in_min;
Pressure_node_max = model.record.bounds(end).heatingnetwork.Pressure_node_max;
Pressure_node_min = model.record.bounds(end).heatingnetwork.Pressure_node_min;
num_aux = size(model.record.bounds(end).heatingnetwork.aux_beta_max,1);

%%
model.cons_McCormick = [];
McCormick_aux_alpha_beta();
McCormick_aux_M();
McCormick_aux_h();
McCormick_h();
McCormick_Power_pump();


%%
if DisplayTime
    t1 = clock;
    fprintf('%10.2f%s\n', etime(t1,t0), 's');
end

%% *****************************************************************
%%                           Sub Function
%% *****************************************************************
%% -----------------------------------------------------------------
% % McCormick envelop of aux_alpha_product
    function McCormick_aux_alpha_beta()
        if flag_McCormick
            % % aux_alpha_product
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) >= ...
                aux_alpha_min(1:end-1,:,:) .* model.var.heatingnetwork.aux_alpha(2:end,:,:) + ...
                aux_alpha_min(2:end,:,:) .* model.var.heatingnetwork.aux_alpha(1:end-1,:,:) - ...
                aux_alpha_min(1:end-1,:,:) .* aux_alpha_min(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) >= ...
                aux_alpha_max(1:end-1,:,:) .* model.var.heatingnetwork.aux_alpha(2:end,:,:) + ...
                aux_alpha_max(2:end,:,:) .* model.var.heatingnetwork.aux_alpha(1:end-1,:,:) - ...
                aux_alpha_max(1:end-1,:,:) .* aux_alpha_max(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) <= ...
                aux_alpha_min(1:end-1,:,:) .* model.var.heatingnetwork.aux_alpha(2:end,:,:) + ...
                aux_alpha_max(2:end,:,:) .* model.var.heatingnetwork.aux_alpha(1:end-1,:,:) - ...
                aux_alpha_min(1:end-1,:,:) .* aux_alpha_max(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) <= ...
                aux_alpha_max(1:end-1,:,:) .* model.var.heatingnetwork.aux_alpha(2:end,:,:) + ...
                aux_alpha_min(2:end,:,:) .* model.var.heatingnetwork.aux_alpha(1:end-1,:,:) - ...
                aux_alpha_max(1:end-1,:,:) .* aux_alpha_min(2:end,:,:) ...
                ) : '');
            
            % % aux_beta_product
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) >= ...
                aux_beta_min(1:end-1,:,:) .* model.var.heatingnetwork.aux_beta(2:end,:,:) + ...
                aux_beta_min(2:end,:,:) .* model.var.heatingnetwork.aux_beta(1:end-1,:,:) - ...
                aux_beta_min(1:end-1,:,:) .* aux_beta_min(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) >= ...
                aux_beta_max(1:end-1,:,:) .* model.var.heatingnetwork.aux_beta(2:end,:,:) + ...
                aux_beta_max(2:end,:,:) .* model.var.heatingnetwork.aux_beta(1:end-1,:,:) - ...
                aux_beta_max(1:end-1,:,:) .* aux_beta_max(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) <= ...
                aux_beta_min(1:end-1,:,:) .* model.var.heatingnetwork.aux_beta(2:end,:,:) + ...
                aux_beta_max(2:end,:,:) .* model.var.heatingnetwork.aux_beta(1:end-1,:,:) - ...
                aux_beta_min(1:end-1,:,:) .* aux_beta_max(2:end,:,:) ...
                ) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) <= ...
                aux_beta_max(1:end-1,:,:) .* model.var.heatingnetwork.aux_beta(2:end,:,:) + ...
                aux_beta_min(2:end,:,:) .* model.var.heatingnetwork.aux_beta(1:end-1,:,:) - ...
                aux_beta_max(1:end-1,:,:) .* aux_beta_min(2:end,:,:) ...
                ) : '');
        end
        
        % % 0-1 linearization of bilinear terms
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_alpha_product) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) <= ...
            model.var.heatingnetwork.aux_alpha(1:end-1,:,:)) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_alpha_product(1:end-1,:,:) <= ...
            model.var.heatingnetwork.aux_alpha(2:end,:,:)) : '');
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_beta_product) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) <= ...
            model.var.heatingnetwork.aux_beta(1:end-1,:,:)) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_beta_product(1:end-1,:,:) <= ...
            model.var.heatingnetwork.aux_beta(2:end,:,:)) : '');
    end

%% ------------------------------------
% % McMormick envelope: aux_M1 & aux_M2
    function McCormick_aux_M()
        % aux_M_alpha
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_alpha(i,:,t) >= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_alpha(i,:,t) >= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_alpha(i,:,t) <= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_alpha(i,:,t) <= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)))  : '');
            end
        end
        % aux_M_beta
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_beta(i,:,t) >= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_beta(i,:,t) >= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_beta(i,:,t) <= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*Massflow_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_M_beta(i,:,t) <= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.Massflow(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*Massflow_min(t,:)))  : '');
            end
        end
        
        % 0-1 linearization of bilinear terms
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_M_alpha) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_M_alpha <= ...
            model.var.heatingnetwork.aux_alpha*big_M) : '');
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_M_beta) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_M_beta <= ...
            model.var.heatingnetwork.aux_beta*big_M) : '');
    end

%% -----------------------------------------------------------------
% % McMormick envelope: linearization of aux_h_in
    function McCormick_aux_h()
        % aux_h_pipe_s_in_alpha
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_alpha(i,:,t) >= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_alpha(i,:,t) >= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_alpha(i,:,t) <= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_alpha(i,:,t) <= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)))  : '');
            end
        end
        % aux_h_pipe_s_in_beta
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_beta(i,:,t) >= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_beta(i,:,t) >= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_beta(i,:,t) <= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_s_in_beta(i,:,t) <= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*h_pipe_s_in_min(t,:)))  : '');
            end
        end
        
        % aux_h_pipe_r_in_alpha
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_alpha(i,:,t) >= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_alpha(i,:,t) >= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_alpha(i,:,t) <= ...
                    aux_alpha_min(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)) - ...
                    aux_alpha_min(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_alpha(i,:,t) <= ...
                    aux_alpha_max(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_alpha(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)) - ...
                    aux_alpha_max(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)))  : '');
            end
        end
        
        % aux_h_pipe_r_in_beta
        if flag_McCormick
            for t = 1:num_heatperiod
                i = 1:num_aux;
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_beta(i,:,t) >= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_beta(i,:,t) >= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_beta(i,:,t) <= ...
                    aux_beta_min(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)) - ...
                    aux_beta_min(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_max(t,:)))  : '');
                model.cons_McCormick = model.cons_McCormick + (( ...
                    model.var.heatingnetwork.aux_h_pipe_r_in_beta(i,:,t) <= ...
                    aux_beta_max(i,:,t) .* model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:) + ...
                    model.var.heatingnetwork.aux_beta(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)) - ...
                    aux_beta_max(i,:,t) .* (ones(num_aux,1)*h_pipe_r_in_min(t,:)))  : '');
            end
        end
        
        % % 0-1 linearization of bilinear terms
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_h_pipe_s_in_alpha) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_h_pipe_s_in_alpha <= ...
            model.var.heatingnetwork.aux_alpha*big_M) : '');
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_h_pipe_s_in_beta) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_h_pipe_s_in_beta <= ...
            model.var.heatingnetwork.aux_beta*big_M) : '');
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_h_pipe_r_in_alpha) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_h_pipe_r_in_alpha <= ...
            model.var.heatingnetwork.aux_alpha*big_M) : '');
        model.cons_McCormick = model.cons_McCormick + ((0 <= ...
            model.var.heatingnetwork.aux_h_pipe_r_in_beta) : '');
        model.cons_McCormick = model.cons_McCormick + (( ...
            model.var.heatingnetwork.aux_h_pipe_r_in_beta <= ...
            model.var.heatingnetwork.aux_beta*big_M) : '');
    end

%% -----------------------------------------------------------------
% % McCormick envelope of h_pipe
    function McCormick_h()
        % s,in
        if flag_McCormick
            t = 1:num_heatperiod;
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_s_in(t+num_initialtime,:) + ...
                Tau_pipe_s_in_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).* Tau_pipe_s_in_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_s_in(t+num_initialtime,:) + ...
                Tau_pipe_s_in_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_s_in_max(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_s_in(t+num_initialtime,:) + ...
                Tau_pipe_s_in_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_s_in_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_in(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_s_in(t+num_initialtime,:) + ...
                Tau_pipe_s_in_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_s_in_max(t,:))) : '');
            % s,out
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_out(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_s_out(t+num_initialtime,:) + ...
                Tau_pipe_s_out_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).* Tau_pipe_s_out_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_out(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_s_out(t+num_initialtime,:) + ...
                Tau_pipe_s_out_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_s_out_max(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_out(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_s_out(t+num_initialtime,:) + ...
                Tau_pipe_s_out_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_s_out_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_s_out(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_s_out(t+num_initialtime,:) + ...
                Tau_pipe_s_out_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_s_out_max(t,:))) : '');
            % r,in
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_r_in(t+num_initialtime,:) + ...
                Tau_pipe_r_in_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_r_in_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_r_in(t+num_initialtime,:) + ...
                Tau_pipe_r_in_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_r_in_max(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_r_in(t+num_initialtime,:) + ...
                Tau_pipe_r_in_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_r_in_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_in(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_r_in(t+num_initialtime,:) + ...
                Tau_pipe_r_in_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_r_in_max(t,:))) : '');
            % r,out
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_out(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_r_out(t+num_initialtime,:) + ...
                Tau_pipe_r_out_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_r_out_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_out(t+num_initialtime,:) >= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_r_out(t+num_initialtime,:) + ...
                Tau_pipe_r_out_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_r_out_max(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_out(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_max(t,:).*model.var.heatingnetwork.Tau_pipe_r_out(t+num_initialtime,:) + ...
                Tau_pipe_r_out_min(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_max(t,:).*Tau_pipe_r_out_min(t,:))) : '');
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.h_pipe_r_out(t+num_initialtime,:) <= heat_coefficient* ...
                (Massflow_min(t,:).*model.var.heatingnetwork.Tau_pipe_r_out(t+num_initialtime,:) + ...
                Tau_pipe_r_out_max(t,:).*model.var.heatingnetwork.Massflow(t+num_initialtime,:) - ...
                Massflow_min(t,:).*Tau_pipe_r_out_max(t,:))) : '');
        end
    end

%% -----------------------------------------------------------------
% % Power of pump
    function McCormick_Power_pump()
        if flag_McCormick
            % % Power of pump   g*f*m = m/s^2 * m * kg/s = kg*m^2/s^3 = W
            t = 1:num_heatperiod;
            i = 1:num_pump;
            % >= min min
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.Power_pump(t+num_initialtime,i) >= ...
                1/3600*gravity/eta_pump*( ...
                Pressure_node_min(:,i).*model.var.heatingnetwork.Massflow(t+num_initialtime,i) + ...
                Massflow_min(:,i).*model.var.heatingnetwork.Pressure_pump(t+num_initialtime,i) - ...
                Pressure_node_min(:,i).*Massflow_min(:,i))) : '');
            % >= max max
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.Power_pump(t+num_initialtime,i) >= ...
                1/3600*gravity/eta_pump*( ...
                Pressure_node_max(:,i).*model.var.heatingnetwork.Massflow(t+num_initialtime,i) + ...
                Massflow_max(:,i).*model.var.heatingnetwork.Pressure_pump(t+num_initialtime,i) - ...
                Pressure_node_max(:,i).*Massflow_max(:,i))) : '');
            % <= min max
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.Power_pump(t+num_initialtime,i) <= ...
                1/3600*gravity/eta_pump*( ...
                Pressure_node_min(:,i).*model.var.heatingnetwork.Massflow(t+num_initialtime,i) + ...
                Massflow_max(:,i).*model.var.heatingnetwork.Pressure_pump(t+num_initialtime,i) - ...
                Pressure_node_min(:,i).*Massflow_max(:,i))) : '');
            % <= max min
            model.cons_McCormick = model.cons_McCormick + (( ...
                model.var.heatingnetwork.Power_pump(t+num_initialtime,i) <= ...
                1/3600*gravity/eta_pump*( ...
                Pressure_node_max(:,i).*model.var.heatingnetwork.Massflow(t+num_initialtime,i) + ...
                Massflow_min(:,i).*model.var.heatingnetwork.Pressure_pump(t+num_initialtime,i) - ...
                Pressure_node_max(:,i).*Massflow_min(:,i))) : '');
        end
    end
end