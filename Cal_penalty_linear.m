function Cal_penalty_linear(varargin)
if find(strcmp(varargin, 'DisplayTime'))
    DisplayTime = varargin{find(strcmp(varargin, 'DisplayTime'))+1};
else
    DisplayTime = 1;
end
if DisplayTime
    fprintf('%-40s\t\t','- Calculate penalty cost');
    t0 = clock;
end
global data model;
%%
num_initialtime = data.initialParam.heatingnetwork.num_initialtime;
num_heatperiod = data.period*data.interval.electricity/data.interval.heat;  % h
num_start = num_initialtime+1;
num_end = num_initialtime+num_heatperiod;
length_penalty = length(model.penalty);
t = num_start:num_end;

k = varargin{1};
model.var.penalty = sdpvar(1,1);
if length_penalty == 0
    model.cons = model.cons + (( ...
        model.var.penalty == 0) : '');
    
elseif length_penalty >= 1
    Num_aux = size(model.record.projection(end).aux_alpha_Massflow,1);
    % % Massflow: 6
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Massflow(t,:)./model.record.projection(end).Massflow_Tau_pipe_s_in - 1 ...
        <= model.var.penalty) : ''); %#ok<*BDSCA>
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Massflow(t,:)./model.record.projection(end).Massflow_Tau_pipe_s_out - 1 ...
        <= model.var.penalty) : '');    
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Massflow(t,:)./model.record.projection(end).Massflow_Tau_pipe_r_in - 1 ...
        <= model.var.penalty) : '');    
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Massflow(t,:)./model.record.projection(end).Massflow_Tau_pipe_r_out - 1 ...
        <= model.var.penalty) : '');
    
%     for i = 1:Num_aux
%     model.cons = model.cons + (( ...
%         - model.var.penalty <= ...
%         model.var.heatingnetwork.Massflow(t,:)./model.record.projection(end).Massflow_alpha(i,:,t) - 1 + ...
%         sum(sum((model.var.heatingnetwork.Massflow(t,:) - model.record.projection(end).Massflow_beta).^2));

    % % Tau_pipe: 4
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Tau_pipe_s_in(t,:)./model.record.projection(end).Tau_pipe_s_in - 1 ...
        <= model.var.penalty) : '');
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Tau_pipe_s_out(t,:)./model.record.projection(end).Tau_pipe_s_out - 1 ...
        <= model.var.penalty) : '');
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Tau_pipe_r_in(t,:)./model.record.projection(end).Tau_pipe_r_in - 1 ...
        <= model.var.penalty) : '');
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.Tau_pipe_r_out(t,:)./model.record.projection(end).Tau_pipe_r_out - 1 ...
        <= model.var.penalty) : '');
 
    % % h_pipe_s_in: 4
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.h_pipe_s_in(t,:)./model.record.projection(end).h_pipe_s_in_Massflow - 1 ...
        <= model.var.penalty) : '');
    
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.h_pipe_s_out(t,:)./model.record.projection(end).h_pipe_s_out_Massflow - 1 ...
        <= model.var.penalty) : '');
               
%         sum(sum((model.var.heatingnetwork.h_pipe_s_in(t,:) - model.record.projection(end).h_pipe_s_in_alpha).^2)) + ...
%         sum(sum((model.var.heatingnetwork.h_pipe_s_in(t,:) - model.record.projection(end).h_pipe_s_in_beta).^2)) + ...

    % % h_pipe_r_in: 4
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.h_pipe_r_in(t,:)./model.record.projection(end).h_pipe_r_in_Massflow - 1 ...
        <= model.var.penalty) : '');
    
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.h_pipe_r_out(t,:)./model.record.projection(end).h_pipe_r_out_Massflow - 1 ...
        <= model.var.penalty) : '');
    
    %         sum(sum((model.var.heatingnetwork.h_pipe_r_in(t,:) - model.record.projection(end).h_pipe_r_in_alpha).^2)) + ...
%         sum(sum((model.var.heatingnetwork.h_pipe_r_in(t,:) - model.record.projection(end).h_pipe_r_in_beta).^2)) + ...

    
%%
    % % temp

    for t = 1:num_heatperiod
        i = 1:Num_aux;
        temp.Massflow(i,:,t) = model.record.solution(end).solution.heatingnetwork.Massflow(t+num_initialtime+1-i,:);
        temp.h_pipe_s_in(i,:,t) = model.record.solution(end).solution.heatingnetwork.h_pipe_s_in(t+num_initialtime+1-i,:);
        temp.h_pipe_r_in(i,:,t) = model.record.solution(end).solution.heatingnetwork.h_pipe_r_in(t+num_initialtime+1-i,:);
    end
    
    % % alpha: 3
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_alpha(:)  - model.record.projection(end).aux_alpha_Massflow(:)  ...
        <= model.var.penalty) : '');   
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_alpha(:)  - model.record.projection(end).aux_alpha_h_pipe_s_in(:)  ...
        <= model.var.penalty) : '');       
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_alpha(:)  - model.record.projection(end).aux_alpha_h_pipe_r_in(:)  ...
        <= model.var.penalty) : '');   

    % % aux_M_alpha: 1
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:)  <= ...    
        (model.var.heatingnetwork.aux_M_alpha(:)  - model.record.projection(end).aux_M_alpha(:) ) ...
        <= model.var.penalty * temp.h_pipe_s_in(:) ) : '');  
    % % aux_h_alpha: 2
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:)  <= ...
        (model.var.heatingnetwork.aux_h_pipe_s_in_alpha(:) - model.record.projection(end).aux_h_pipe_s_in_alpha(:) ) ...
        <= model.var.penalty * temp.h_pipe_s_in(:) ) : '');
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:) <= ...
        (model.var.heatingnetwork.aux_h_pipe_r_in_alpha(:) - model.record.projection(end).aux_h_pipe_r_in_alpha(:) ) ...
        <= model.var.penalty * temp.h_pipe_s_in(:)) : '');

    
    % % beta: 3
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_beta(:)  - model.record.projection(end).aux_beta_Massflow(:)  ...
        <= model.var.penalty) : '');   
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_beta(:)  - model.record.projection(end).aux_beta_h_pipe_s_in(:)  ...
        <= model.var.penalty ) : '');       
    model.cons = model.cons + (( ...
        - model.var.penalty <= ...
        model.var.heatingnetwork.aux_beta(:)  - model.record.projection(end).aux_beta_h_pipe_r_in(:)  ...
        <= model.var.penalty ) : '');   

    % % aux_M_beta: 1
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:)  <= ...    
        (model.var.heatingnetwork.aux_M_beta(:)  - model.record.projection(end).aux_M_beta(:)) ...
        <= model.var.penalty * temp.h_pipe_s_in(:) ) : '');  
    % % aux_h_beta: 2
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:)  <= ...
        (model.var.heatingnetwork.aux_h_pipe_s_in_beta(:) - model.record.projection(end).aux_h_pipe_s_in_beta(:) ) ...
        <= model.var.penalty * temp.h_pipe_s_in(:) ) : '');
    model.cons = model.cons + (( ...
        - model.var.penalty * temp.h_pipe_s_in(:)  <= ...
        (model.var.heatingnetwork.aux_h_pipe_r_in_beta(:) - model.record.projection(end).aux_h_pipe_r_in_beta(:) ) ...
        <= model.var.penalty * temp.h_pipe_s_in(:) ) : '');    
end

%% sum
model.penalty(length_penalty+1).sum = k * model.var.penalty;
% + ...
%     model.penalty(length_penalty+1).aux_alpha + model.penalty(length_penalty+1).aux_beta + ...
%     model.penalty(length_penalty+1).aux_M_alpha + model.penalty(length_penalty+1).aux_M_beta + ...
%     model.penalty(length_penalty+1).aux_h_alpha + model.penalty(length_penalty+1).aux_h_beta);


%%
if DisplayTime
    t1 = clock;
    fprintf('%10.2f%s\n', etime(t1,t0), 's');
end

end