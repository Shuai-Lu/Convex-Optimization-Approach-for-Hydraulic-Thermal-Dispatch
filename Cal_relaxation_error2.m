function Cal_relaxation_error2(varargin)
if find(strcmp(varargin, 'DisplayTime'))
    DisplayTime = varargin{find(strcmp(varargin, 'DisplayTime'))+1};
else
    DisplayTime = 1;
end
if DisplayTime
    fprintf('%-40s\t\t','- Calculate relaxation error');
    t0 = clock;
end
global data model;
loc_rough = 5; loc_flag_pump = 16; loc_eta_pump = 17;
c_w = data.BasicParam.Massflow.HeatCapacity;     % kJ/(kg*¡æ)
gravity = data.BasicParam.gravity;                     % m/s^2
eta_pump = data.heatingnetwork.pipe(data.heatingnetwork.pipe(:,loc_flag_pump)==1, loc_eta_pump);
num_initialtime = data.initialParam.heatingnetwork.num_initialtime;
num_heatperiod = data.period*data.interval.electricity/data.interval.heat;
length_error = length(model.record.relaxation_error);
k = 1/3600*c_w;

%% error of alpha & beta
model.record.relaxation_error(length_error+1).aux_alpha_product = ...
    model.record.solution(end).solution.heatingnetwork.aux_alpha_product_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_alpha_product_2_residual;
model.record.relaxation_error(length_error+1).aux_beta_product = ...
    model.record.solution(end).solution.heatingnetwork.aux_beta_product_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_beta_product_2_residual;

model.record.relaxation_error(length_error+1).aux_product_max = ...
    max([max(max(max(model.record.relaxation_error(length_error+1).aux_alpha_product))), ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_beta_product)))]);

%% error of aux_M 
model.record.relaxation_error(length_error+1).aux_M_alpha = ...
    model.record.solution(end).solution.heatingnetwork.aux_M_alpha_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_M_alpha_2_residual;
model.record.relaxation_error(length_error+1).aux_M_beta = ...
    model.record.solution(end).solution.heatingnetwork.aux_M_beta_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_M_beta_2_residual;

model.record.relaxation_error(length_error+1).aux_M_max = ...
    max([max(max(max(model.record.relaxation_error(length_error+1).aux_M_alpha))), ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_M_beta)))]);

%% error of aux_h_pipe
model.record.relaxation_error(length_error+1).aux_h_pipe_s_in_alpha = ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_s_in_alpha_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_s_in_alpha_2_residual;   
model.record.relaxation_error(length_error+1).aux_h_pipe_s_in_beta = ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_s_in_beta_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_s_in_beta_2_residual;   

model.record.relaxation_error(length_error+1).aux_h_pipe_r_in_alpha = ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_r_in_alpha_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_r_in_alpha_2_residual;   
model.record.relaxation_error(length_error+1).aux_h_pipe_r_in_beta = ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_r_in_beta_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.aux_h_pipe_r_in_beta_2_residual;   

model.record.relaxation_error(length_error+1).aux_h_pipe_max = max([ ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_h_pipe_s_in_alpha))), ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_h_pipe_r_in_alpha))), ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_h_pipe_s_in_beta))), ...
    max(max(max(model.record.relaxation_error(length_error+1).aux_h_pipe_r_in_beta)))]);

%% error of h_pipe
model.record.relaxation_error(length_error+1).h_pipe_s_in = ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_s_in_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_s_in_2_residual;
model.record.relaxation_error(length_error+1).h_pipe_s_out = ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_s_out_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_s_out_2_residual;
model.record.relaxation_error(length_error+1).h_pipe_r_in = ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_r_in_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_r_in_2_residual;
model.record.relaxation_error(length_error+1).h_pipe_r_out = ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_r_out_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.h_pipe_r_out_2_residual;

model.record.relaxation_error(length_error+1).h_pipe_max = max( ...
    [max(max(model.record.relaxation_error(length_error+1).h_pipe_s_in)), ...
    max(max(model.record.relaxation_error(length_error+1).h_pipe_s_out)), ...
    max(max(model.record.relaxation_error(length_error+1).h_pipe_r_in)), ...
    max(max(model.record.relaxation_error(length_error+1).h_pipe_r_out))]);

%% error of Pressure_loss
model.record.relaxation_error(length_error+1).Pressure_loss = ...
    model.record.solution(end).solution.heatingnetwork.Pressure_loss_residual;
model.record.relaxation_error(length_error+1).Pressure_loss_max = ...
    max(max(model.record.relaxation_error(length_error+1).Pressure_loss(:,:)));
    
%% error of Power_pump
model.record.relaxation_error(length_error+1).Power_pump = ...
    model.record.solution(end).solution.heatingnetwork.Power_pump_1_residual + ...
    model.record.solution(end).solution.heatingnetwork.Power_pump_2_residual;

model.record.relaxation_error(length_error+1).Power_pump_max = ...
    max(max(model.record.relaxation_error(length_error+1).Power_pump(:,:)));

%%
model.record.relaxation_error(length_error+1).max = max( ...
    [model.record.relaxation_error(length_error+1).aux_product_max, ...
    model.record.relaxation_error(length_error+1).h_pipe_max, ...
    model.record.relaxation_error(length_error+1).aux_M_max, ...
    model.record.relaxation_error(length_error+1).aux_h_pipe_max, ...
    model.record.relaxation_error(length_error+1).Pressure_loss_max, ...
    model.record.relaxation_error(length_error+1).Power_pump_max]);
%%
if DisplayTime
    t1 = clock;
    fprintf('%10.2f%s\n', etime(t1,t0), 's');
end
end